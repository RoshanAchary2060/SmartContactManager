spring.application.name=SmartContactManager
# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/smartcontactmanager
spring.datasource.username=postgres
spring.datasource.password=postgres
# JPA/Hibernate configuration
spring.jpa.database=POSTGRESQL
spring.jpa.hibernate.ddl-auto=update   
# Use 'update' for automatic schema update (change to 'none' in production)
spring.jpa.show-sql=true                
# Show SQL queries in the console (useful for debugging)
spring.jpa.properties.hibernate.format_sql=true  
# Format SQL queries for readability
# Enable JPA repositories (Optional if not already configured)
#spring.data.jpa.repositories.enabled=false
#spring.jpa.open-in-view=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# server port
server.port=5000
# oauth2 client configurations
# google configure
spring.security.oauth2.client.registration.google.client-name=google
#spring.security.oauth2.client.registration.google.client-id=869057892677-7loddjupn6cf0vf18bsnhahik0pdpnf8.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
#spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_cod
# github configure
spring.security.oauth2.client.registration.github.client-name=github
#spring.security.oauth2.client.registration.github.client-id=Iv23li6J58YzGQukiLqh
spring.security.oauth2.client.registration.github.scope=email,profile
#spring.security.oauth2.client.registration.github.client-secret=06ff40bce8a7b0568370f6ee8b71d2916c74558c
# facebook configure